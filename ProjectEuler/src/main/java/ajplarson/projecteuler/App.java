/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ajplarson.projecteuler;

import org.apache.commons.lang3.ArrayUtils;
import static java.lang.Float.max;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/**
 *
 * @author ajplarson Each new term in the Fibonacci sequence is generated by
 * adding the previous two terms. By starting with 1 and 2, the first 10 terms
 * will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed
 * four million, find the sum of the even-valued terms.
 */
public class App {

    public static void main(String[] args) {
        printList(divisors(42));
    }

    public static String listSquared(long m, long n) {
       while (m <= n) {
           
           
           m++;
       }
    }
    public static void printList(List<Long> list) {
       
        for (long i : list) {
            System.out.println(i);
        }
    }

    public static long divisorsSquared(long n) {
        List<Long> factors = new ArrayList<>();
        for (int i = 1; i <= (int) n; i++) {
            for (int j = 1; j <= (int) n; j++) {
                if (i * j == n) {
                    factors.add((long) (i * i));
                    factors.add((long) (j * j));
                }
            }
        }
        return factors;
    }
}
